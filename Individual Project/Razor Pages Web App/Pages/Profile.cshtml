@page
@model Razor_Pages_Web_App.Pages.ProfileModel
@{
    var currentProfilePic = Model.PresetImages.FirstOrDefault(p => p.Id == Model.LoggedUser.ProfilePicture);
}
<div class="container">
    <div class="row mt-5">
        <div class="col-md-3 profile-pic-box">
            <img id="currentProfilePic" src="@Model.GetProfilePictureUrlById(Model.LoggedUser.ProfilePicture)" alt="Current Profile Image" style="width: 250px; height: 250px;" />
            <button class="btn btn-primary mt-2" onclick="openModal()">Choose Profile Picture</button>
        </div>
        
        <input type="hidden" id="hiddenProfilePicUrl" name="SelectedProfileImage" />
        <div class="col-9">
            <h1>Profile</h1>
            <br />

            <form method="post">
                <div class="text-danger" asp-validation-summary="ModelOnly"></div>

                <div class="form-group row">
                    <div class="col-3">
                        <label asp-for="@Model.LoggedUser.Username">Username:</label>
                    </div>
                    <div class="col-6">
                        <div class="input-group">
                            <label asp-for="@Model.LoggedUser.Username" class="form-control" disabled style="color: @Model.LoggedUser.UsernameColor; font-weight:500">@Model.LoggedUser.Username</label>
                            <input type="color" asp-for="@Model.UsernameColor" class="form-control-color" value="@Model.LoggedUser.UsernameColor" id="colourPicker" onclick="getColour();" />

                        </div>
                    </div>
                </div>
                <br />


                <div class="form-group row">
                    <div class="col-3">
                        <label asp-for="@Model.Email">Email:</label>
                    </div>
                    <div class="col-6">
                        <input type="email" asp-for="@Model.Email" class="form-control" value="@Model.LoggedUser.Email" />
                    </div>
                    <span class="text-danger" asp-validation-for="@Model.Email"></span>
                </div>
                <br />

                <div class="form-group row">
                    <div class="col-3">
                        <label asp-for="@Model.Bio">Bio:</label>
                    </div>
                    <div class="col-6">
                        <input type="text" asp-for="@Model.Bio" class="form-control" value="@Model.LoggedUser.Bio" />
                    </div>
                </div>
                <br />

                <div class="form-group row">
                    <div class="col-3">
                        <label asp-for="@Model.LoggedUser.RegistrationDate">Registration date:</label>
                    </div>
                    <div class="col-6">
                        <label asp-for="@Model.LoggedUser.RegistrationDate" class="form-control" disabled>@Model.LoggedUser.RegistrationDate</label>
                    </div>
                </div>

                <div class="form-group row">
                    <div class="text-center mt-2">
                        <div class="w3-show-inline-block">
                            <input type="submit" asp-page-handler="OnPost" class="btn btn-primary" value="Save changes" />
                            <input type="submit" asp-page-handler="Delete" class="btn btn-danger" value="Delete account" onclick="return confirmPost();" />
                        </div>
                    </div>
                </div>

            </form>
            <div id="profilePictureModal" class="overlay" style="display: none;">
                <div class="modal-content">
                    <h4>Select Profile Picture</h4>
                    <div class="grid-container2">
                        @foreach (var image in Model.PresetImages)
                        {
                            <img src="@image.Url" alt="Profile Image" class="selectable-image" onclick="selectProfileImage('@image.Id', '@image.Url')" />
                        }
                    </div>
                    <button type="button" onclick="closeModal()" class="btn btn-secondary">Cancel</button>
                    <button type="button" onclick="updateProfilePicture()" class="btn btn-success">Save</button>
                </div>
            </div>
        </div>
    </div>
</div>
@{
    if (Model.ViewData["Error"] != null)
    {
        <div class="container">
            <div class="fixed-bottom alert alert-danger alert-dismissible fade show" role="alert">
                @Model.ViewData["Error"]
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        </div>
    }
}

@section Scripts {
    <script>
        function openModal() {
            document.getElementById('profilePictureModal').style.display = 'flex';
        }

        function closeModal() {
            document.getElementById('profilePictureModal').style.display = 'none';
        }

        function selectProfileImage(imageId, imageUrl) {
            document.getElementById('currentProfilePic').src = imageUrl;
            document.getElementById('hiddenProfilePicUrl').value = imageId;
            closeModal();
        }

        document.addEventListener("DOMContentLoaded", function () {
            document.querySelectorAll('.selectable-image').forEach(img => {
                img.addEventListener('click', function () {
                    var imageId = this.getAttribute('onclick').split(',')[0].replace("selectProfileImage('", "").replace("'", "").trim();
                    var imageUrl = this.src;
                    selectProfileImage(imageId, imageUrl);
                });
            });
        });
        function confirmPost() {
            return confirm("Are you sure you want to delete your account? This action is permanent!");
        }

        function getColour() {
            var colorPicker = document.getElementById("colourPicker");
            document.getElementById("hiddenColour").value = colorPicker.value;
        }
    </script>
}

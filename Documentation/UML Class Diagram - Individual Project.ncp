<Project>
  <Name>UML Class Diagram - Individual Project</Name>
  <ProjectItem type="NClass.DiagramEditor.ClassDiagram.Diagram" assembly="NClass.DiagramEditor, Version=2.4.1823.0, Culture=neutral, PublicKeyToken=null">
    <Name>UML Class Diagram</Name>
    <Language>CSharp</Language>
    <Entities>
      <Entity type="Class">
        <Name>User</Name>
        <Access>Public</Access>
        <Location left="1534" top="208" />
        <Size width="774" height="468" />
        <Collapsed>False</Collapsed>
        <Member type="Field">int Id</Member>
        <Member type="Field">string Username</Member>
        <Member type="Field">string Password</Member>
        <Member type="Field">string Email</Member>
        <Member type="Field">DateOnly RegistrationDate</Member>
        <Member type="Field">string UsernameColor</Member>
        <Member type="Field">int ProfilePicture</Member>
        <Member type="Field">string? Bio</Member>
        <Member type="Field">bool? Banned</Member>
        <Member type="Field">bool IsAdmin</Member>
        <Member type="Constructor">public User()</Member>
        <Member type="Constructor">public User(string username, string password, string email, bool isAdmin)</Member>
        <Member type="Constructor">public User(int id, string username, string password, string email, DateOnly registrationDate, string profilePicture, string bio, bool banned, bool isAdmin)</Member>
        <Member type="Property">public int ID { get; set; }</Member>
        <Member type="Property">public string Username { get; set; }</Member>
        <Member type="Property">public string Password { get; set; }</Member>
        <Member type="Property">public string Email { get; set; }</Member>
        <Member type="Property">public DateOnly RegistrationDate { get; set; }</Member>
        <Member type="Property">public string UsernameColor { get; set; }</Member>
        <Member type="Property">public int ProfilePicture { get; set; }</Member>
        <Member type="Property">public string Bio { get; set; }</Member>
        <Member type="Property">public bool Banned { get; set; }</Member>
        <Member type="Property">public bool IsAdmin { get; set; }</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>UserController</Name>
        <Access>Public</Access>
        <Location left="2035" top="1473" />
        <Size width="310" height="315" />
        <Collapsed>False</Collapsed>
        <Member type="Field">IUserManagement userManager</Member>
        <Member type="Method">public bool Create(User user)</Member>
        <Member type="Method">public User[] ReadAll()</Member>
        <Member type="Method">public User[] ReadAllUsers()</Member>
        <Member type="Method">public User[] ReadAllAdmins()</Member>
        <Member type="Method">public User[] ReadAllUsersSearch(string search)</Member>
        <Member type="Method">public bool Update(User user)</Member>
        <Member type="Method">public bool Delete(User user)</Member>
        <Member type="Method">public User? GetUserFromUsername(string username)</Member>
        <Member type="Method">public User? GetUserFromId(int id)</Member>
        <Member type="Method">public string? GetSalt(User user)</Member>
        <Member type="Method">public bool UpdateUserBanStatus(int userId, bool isBanned)</Member>
        <Member type="Method">public List&lt;ProfileImage&gt; GetAllProfilePictures()</Member>
        <Member type="Method">public string GetProfilePictureUrlById(int id)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>Ban</Name>
        <Access>Public</Access>
        <Location left="620" top="1644" />
        <Size width="496" height="349" />
        <Collapsed>False</Collapsed>
        <Member type="Field">int Id</Member>
        <Member type="Field">DateOnly StartDate</Member>
        <Member type="Field">DateOnly EndDate</Member>
        <Member type="Field">string Reason</Member>
        <Member type="Field">User User</Member>
        <Member type="Field">Admin User</Member>
        <Member type="Field">bool IsActive</Member>
        <Member type="Constructor">public Ban(DateOnly startDate, DateOnly endDate, string reason, User user, User admin)</Member>
        <Member type="Constructor">public Ban(int id, DateOnly startDate, DateOnly endDate, string reason, User user, User admin)</Member>
        <Member type="Property">public int Id { get; set; }</Member>
        <Member type="Property">public DateOnly StartDate { get; set; }</Member>
        <Member type="Property">public DateOnly EndDate { get; set; }</Member>
        <Member type="Property">public string Reason { get; set; }</Member>
        <Member type="Property">public User User { get; set; }</Member>
        <Member type="Property">public User Admin { get; set; }</Member>
        <Member type="Property">public bool IsActive { get; set; }</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>BanController</Name>
        <Access>Public</Access>
        <Location left="1299" top="1768" />
        <Size width="252" height="179" />
        <Collapsed>False</Collapsed>
        <Member type="Field">IBanManagement banManager</Member>
        <Member type="Method">public bool Create(Ban ban)</Member>
        <Member type="Method">public Ban[] ReadAll()</Member>
        <Member type="Method">public Ban[] ReadAllSearch(string search)</Member>
        <Member type="Method">public bool UnbanUser(User user)</Member>
        <Member type="Method">public bool IsUserCurrentlyBanned(int userId)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>Submission</Name>
        <Access>Public</Access>
        <Location left="3322" top="780" />
        <Size width="535" height="332" />
        <Collapsed>False</Collapsed>
        <Member type="Field">int Id</Member>
        <Member type="Field">User User</Member>
        <Member type="Field">Game Game</Member>
        <Member type="Field">DateOnly Date</Member>
        <Member type="Field">TimeSpan TotalTime</Member>
        <Member type="Field">EnumPlatform Platform</Member>
        <Member type="Constructor">public Submission()</Member>
        <Member type="Constructor">public Submission(User user, Game game, DateOnly date, TimeSpan time, EnumPlatform platform)</Member>
        <Member type="Constructor">public Submission(int id, User user, Game game, DateOnly date, TimeSpan time, EnumPlatform platform)</Member>
        <Member type="Property">public int Id { get; set; }</Member>
        <Member type="Property">public User User { get; set; }</Member>
        <Member type="Property">public Game Game { get; set; }</Member>
        <Member type="Property">public DateOnly Date { get; set; }</Member>
        <Member type="Property">public TimeSpan TotalTime { get; set; }</Member>
        <Member type="Property">public EnumPlatform Platform { get; set; }</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>SubmissionController</Name>
        <Access>Public</Access>
        <Location left="2453" top="1431" />
        <Size width="685" height="315" />
        <Collapsed>False</Collapsed>
        <Member type="Method">public bool Create(RankedSubmission submission)</Member>
        <Member type="Method">public bool Create(UnrankedSubmission submission)</Member>
        <Member type="Method">public Submission[] ReadRecent(string username)</Member>
        <Member type="Method">public UnrankedSubmission[] ReadByGame(int gameId, string username)</Member>
        <Member type="Method">public UnrankedSubmission[] ReadByUser(id userId)</Member>
        <Member type="Method">public RankedSubmission ReadRanked(int id)</Member>
        <Member type="Method">public RankedSubmission[] ReadPendingAdmin(int pendingSearch, string usernameSearch, string gameSearch, string platformSearch)</Member>
        <Member type="Method">public RankedSubmission[] ReadApprovedAdmin(int approvedSearch, string usernameSearch, string gameSearch, string platformSearch)</Member>
        <Member type="Method">public RankedSubmission[] ReadRankedByGame(int gameId, string username)</Member>
        <Member type="Method">public RankedSubmission[] ReadRankedByUser(int userId)</Member>
        <Member type="Method">public bool UpdateRanked(RankedSubmission submission)</Member>
        <Member type="Method">public bool Delete(RankedSubmission submission)</Member>
        <Member type="Method">public int CalculateRank(RankedSubmission submission)</Member>
        <Member type="Method">public int PredictRank(RankedSubmission submission)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Enum">
        <Name>EnumPlatform</Name>
        <Access>Public</Access>
        <Location left="3403" top="494" />
        <Size width="162" height="520" />
        <Collapsed>True</Collapsed>
        <Value>PC</Value>
        <Value>Playstation</Value>
        <Value>Playstation2</Value>
        <Value>Playstation3</Value>
        <Value>Playstation4</Value>
        <Value>Playstation5</Value>
        <Value>PlaystationVita</Value>
        <Value>PlaystationPortable</Value>
        <Value>Xbox</Value>
        <Value>Xbox360</Value>
        <Value>XboxOne</Value>
        <Value>XboxOneS</Value>
        <Value>XboxOneX</Value>
        <Value>XboxSeriesS</Value>
        <Value>XboxSeriesX</Value>
        <Value>NintendoDS</Value>
        <Value>Nintendo2DS</Value>
        <Value>Nintendo3DS</Value>
        <Value>NintendoWii</Value>
        <Value>NintendoWiiU</Value>
        <Value>NintendoSwitch</Value>
        <Value>Android</Value>
        <Value>iOS</Value>
        <Value>SteamDeck</Value>
        <Value>NES</Value>
        <Value>N64</Value>
        <Value>Mac</Value>
      </Entity>
      <Entity type="Class">
        <Name>RankedSubmission</Name>
        <Access>Public</Access>
        <Location left="3322" top="1157" />
        <Size width="761" height="264" />
        <Collapsed>False</Collapsed>
        <Member type="Field">bool Approved</Member>
        <Member type="Field">bool Pending</Member>
        <Member type="Field">string Link</Member>
        <Member type="Field">int Rank</Member>
        <Member type="Constructor">public RankedSubmission()</Member>
        <Member type="Constructor">public RankedSubmission(User user, Game game, DateOnly date, TimeSpan time, EnumPlatform platform, string link, int rank)</Member>
        <Member type="Constructor">public RankedSubmission(int id, User user, DateOnly date, TimeSpan time, EnumPlatform platform, bool approved, bool pending, string link, int rank)</Member>
        <Member type="Property">public bool Approved { get; set; }</Member>
        <Member type="Property">public bool Pending { get; set; }</Member>
        <Member type="Property">public string Link { get; set; }</Member>
        <Member type="Property">public int Rank { get; set; }</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>UnrankedSubmission</Name>
        <Access>Public</Access>
        <Location left="3322" top="1456" />
        <Size width="802" height="230" />
        <Collapsed>False</Collapsed>
        <Member type="Field">bool TAS</Member>
        <Member type="Field">bool Glitchless</Member>
        <Member type="Field">bool AnyPercent</Member>
        <Member type="Constructor">public UnrankedSubmission()</Member>
        <Member type="Constructor">public UnrankedSubmission(int id, User user, Game game, DateOnly date, TimeSpan time, EnumPlatform platform, bool TAS, bool glitchless, bool anypercent)</Member>
        <Member type="Constructor">public UnrankedSubmission(User user, Game game, DateOnly date, TimeSpan time, EnumPlatform platform, bool TAS, bool glitchless, bool anypercent)</Member>
        <Member type="Property">public bool TAS { get; set; }</Member>
        <Member type="Property">public bool Glitchless { get; set; }</Member>
        <Member type="Property">public bool AnyPercent { get; set; }</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>Game</Name>
        <Access>Public</Access>
        <Location left="585" top="635" />
        <Size width="780" height="570" />
        <Collapsed>False</Collapsed>
        <Member type="Field">int ID</Member>
        <Member type="Field">string Name</Member>
        <Member type="Field">string Company</Member>
        <Member type="Field">DateOnly ReleaseDate</Member>
        <Member type="Field">string Genres</Member>
        <Member type="Field">string Platforms</Member>
        <Member type="Field">string TrailerLink</Member>
        <Member type="Field">int NumberOfRuns</Member>
        <Member type="Field">int NumberOfPlayers</Member>
        <Member type="Field">TimeSpan BestTime</Member>
        <Member type="Field">TimeSpan TotalTime</Member>
        <Member type="Field">string PictureLink</Member>
        <Member type="Field">string BackgroundPictureLink</Member>
        <Member type="Constructor">public Game()</Member>
        <Member type="Constructor">public Game(int id, string name, string company, DateOnly releaseDate, string trailerLink, int noOfRuns, int noOfPlayers, TimeSpan bestTime, TimeSpan totalTime, string genres, string platforms, string pictureLink, string backgroundPictureLink)</Member>
        <Member type="Constructor">public Game(string name, string company, DateOnly releaseDate, string trailerLink, string genres, string platforms, string pictureLink, string backgroundPictureLink)</Member>
        <Member type="Property">public int ID { get; set; }</Member>
        <Member type="Property">public string Name { get; set; }</Member>
        <Member type="Property">public string Company { get; set; }</Member>
        <Member type="Property">public DateOnly ReleaseDate { get; set; }</Member>
        <Member type="Property">public string Genres { get; set; }</Member>
        <Member type="Property">public string Platforms { get; set; }</Member>
        <Member type="Property">public string TrailerLink { get; set; }</Member>
        <Member type="Property">public int NumberOfRuns { get; set; }</Member>
        <Member type="Property">public int NumberOfPlayers { get; set; }</Member>
        <Member type="Property">public TimeSpan BestTime { get; set; }</Member>
        <Member type="Property">public TimeSpan TotalTime { get; set; }</Member>
        <Member type="Property">public string PictureLink { get; set; }</Member>
        <Member type="Property">public string BackgroundPictureLink { get; set; }</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Enum">
        <Name>EnumGenre</Name>
        <Access>Public</Access>
        <Location left="3403" top="427" />
        <Size width="162" height="541" />
        <Collapsed>True</Collapsed>
        <Value>Roguelike</Value>
        <Value>Horror</Value>
        <Value>Survival</Value>
        <Value>ARPG</Value>
        <Value>MOBA</Value>
        <Value>Puzzle</Value>
        <Value>OpenWorld</Value>
        <Value>PointAndClick</Value>
        <Value>Sandbox</Value>
        <Value>Simulator</Value>
        <Value>Racing</Value>
        <Value>Sports</Value>
        <Value>Adventure</Value>
        <Value>Action</Value>
        <Value>JRPG</Value>
        <Value>MMORPG</Value>
        <Value>MMO</Value>
        <Value>RPG</Value>
        <Value>FPS</Value>
        <Value>Platformer</Value>
        <Value>Shooter</Value>
        <Value>Strategy</Value>
        <Value>Casual</Value>
        <Value>Arcade</Value>
        <Value>Indie</Value>
        <Value>BattleRoyale</Value>
        <Value>RolePlaying</Value>
        <Value>TowerDefense</Value>
      </Entity>
      <Entity type="Class">
        <Name>GameController</Name>
        <Access>Public</Access>
        <Location left="1657" top="1635" />
        <Size width="304" height="298" />
        <Collapsed>False</Collapsed>
        <Member type="Field">iGameManagement gameManager</Member>
        <Member type="Method">public bool Create(Game game)</Member>
        <Member type="Method">public Game? ReadById(int id)</Member>
        <Member type="Method">public Game[] ReadAll()</Member>
        <Member type="Method">public Game[] ReadOnePageByName(int page, string name)</Member>
        <Member type="Method">public Game[] ReadAllByName(string name)</Member>
        <Member type="Method">public Game[] ReadAllSearch(string name, string company)</Member>
        <Member type="Method">public bool Update(Game game)</Member>
        <Member type="Method">public bool Delete(Game game)</Member>
        <Member type="Method">public int GetTotalPages(int pagesize)</Member>
        <Member type="Method">public bool UserPlayedBefore(User user, Game game)</Member>
        <Member type="Method">public TimeSpan ConvertToTimeSpan(int hours, int minutes, int seconds)</Member>
        <Member type="Method">public void UpdateGameStats(Game game, int hours, int minutes, int seconds)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Interface">
        <Name>IGameManagement</Name>
        <Access>Public</Access>
        <Location left="1657" top="1978" />
        <Size width="314" height="231" />
        <Collapsed>False</Collapsed>
        <Member type="Method">bool Create(Game game)</Member>
        <Member type="Method">Game? ReadById(int id)</Member>
        <Member type="Method">Game[] ReadAll()</Member>
        <Member type="Method">Game[] ReadOnePageByName(int page, string name)</Member>
        <Member type="Method">Game[] ReadAllByName(string name)</Member>
        <Member type="Method">Game[] ReadAllBySearch(string name, string company)</Member>
        <Member type="Method">bool Update(Game game)</Member>
        <Member type="Method">bool Delete(Game game)</Member>
        <Member type="Method">int GetTotalPages(int pagesize)</Member>
        <Member type="Method">bool UserPlayedBefore(User user, Game game)</Member>
      </Entity>
      <Entity type="Interface">
        <Name>IUserManagement</Name>
        <Access>Public</Access>
        <Location left="2056" top="1903" />
        <Size width="275" height="282" />
        <Collapsed>False</Collapsed>
        <Member type="Method">bool Create(user User)</Member>
        <Member type="Method">User[] ReadAll()</Member>
        <Member type="Method">User[] ReadAllUsers()</Member>
        <Member type="Method">User[] ReadAllAdmins()</Member>
        <Member type="Method">User[] ReadAllUsersSearch(string search)</Member>
        <Member type="Method">bool Update(User user)</Member>
        <Member type="Method">bool Delete(User user)</Member>
        <Member type="Method">User? GetUserFromUsername(string username)</Member>
        <Member type="Method">User? GetUserFromId(int id)</Member>
        <Member type="Method">string? GetSalt(User user)</Member>
        <Member type="Method">bool UpdateUserBanStatus(int userId, bool isBanned)</Member>
        <Member type="Method">List&lt;ProfileImage&gt; GetAllProfilePictures()</Member>
        <Member type="Method">string GetProfilePictureUrlById(int id)</Member>
      </Entity>
      <Entity type="Interface">
        <Name>IBanManagement</Name>
        <Access>Public</Access>
        <Location left="1299" top="2056" />
        <Size width="215" height="163" />
        <Collapsed>False</Collapsed>
        <Member type="Method">bool Create(Ban ban)</Member>
        <Member type="Method">Ban[] ReadAll()</Member>
        <Member type="Method">Ban[] ReadAllSearch(string search)</Member>
        <Member type="Method">bool Update(Ban ban)</Member>
        <Member type="Method">bool Delete(Ban ban)</Member>
        <Member type="Method">bool IsUserCurrentlyBanned(int userId)</Member>
      </Entity>
      <Entity type="Interface">
        <Name>ISubmissionManagement</Name>
        <Access>Public</Access>
        <Location left="2453" top="1882" />
        <Size width="690" height="282" />
        <Collapsed>False</Collapsed>
        <Member type="Method">bool Create(RankedSubmission submission)</Member>
        <Member type="Method">bool Create(UnrankedSubmission submission)</Member>
        <Member type="Method">Submission[] ReadRecent(string username)</Member>
        <Member type="Method">Submission[] ReadRecent(int userId)</Member>
        <Member type="Method">UnrankedSubmission[] ReadByGame(int gameId, string username)</Member>
        <Member type="Method">UnrankedSubmission[] ReadByUser(int userId)</Member>
        <Member type="Method">RankedSubmission[] ReadRanked(int id)</Member>
        <Member type="Method">RankedSubmission[] ReadRankedByUser(int userId)</Member>
        <Member type="Method">RankedSubmission[] ReadPendingAdmin(int pendingSearch, string usernameSearch, string gameSearch, string platformSearch)</Member>
        <Member type="Method">RankedSubmission[] ReadApprovedAdmin(int approvedSearch, string usernameSearch, string gameSearch, string platformSearch)</Member>
        <Member type="Method">RankedSubmission[] ReadRankedByGame(int gameId, string username)</Member>
        <Member type="Method">bool UpdateRanked(RankedSubmission submission)</Member>
        <Member type="Method">bool Delete(RankedSubmission submission)</Member>
      </Entity>
      <Entity type="Class">
        <Name>HashPassword</Name>
        <Access>Public</Access>
        <Location left="3355" top="238" />
        <Size width="343" height="111" />
        <Collapsed>False</Collapsed>
        <Member type="Method">public string GenerateHashedPassword(string password, string salt)</Member>
        <Member type="Method">public string GenerateSalt()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>LoginController</Name>
        <Access>Public</Access>
        <Location left="2004" top="1193" />
        <Size width="360" height="179" />
        <Collapsed>False</Collapsed>
        <Member type="Field">UserController userController = new (new UserDAL())</Member>
        <Member type="Field">BanController banController = new(new BanDAL())</Member>
        <Member type="Method">public User? LoginUsername(string username, string password)</Member>
        <Member type="Method">public User? LoginEmail(string email, string password)</Member>
        <Member type="Method">public User? LoginUsernameAdmin(string username, string password)</Member>
        <Member type="Method">public bool IsUserBanned(string username)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>BanDAL</Name>
        <Access>Public</Access>
        <Location left="1299" top="2304" />
        <Size width="213" height="179" />
        <Collapsed>False</Collapsed>
        <Member type="Method">public bool Create(Ban ban)</Member>
        <Member type="Method">public Ban[] ReadAll()</Member>
        <Member type="Method">public Ban[] ReadAllSearch(string search)</Member>
        <Member type="Method">public bool Update(Ban ban)</Member>
        <Member type="Method">public bool Delete(Ban ban)</Member>
        <Member type="Method">public bool IsUserCurrentlyBanned(int userId)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>UserDAL</Name>
        <Access>Public</Access>
        <Location left="2056" top="2265" />
        <Size width="282" height="298" />
        <Collapsed>False</Collapsed>
        <Member type="Method">public bool Create(User user)</Member>
        <Member type="Method">public User[] ReadAll()</Member>
        <Member type="Method">public User[] ReadAllUsers()</Member>
        <Member type="Method">public User[] ReadAllAdmins()</Member>
        <Member type="Method">public User[] ReadAllUsersSearch()</Member>
        <Member type="Method">public bool Update(user User)</Member>
        <Member type="Method">public bool Delete(user User)</Member>
        <Member type="Method">public string? GetSalt(user User)</Member>
        <Member type="Method">public User? GetUserFromUsername(string username)</Member>
        <Member type="Method">public User? GetUserFromId(int id)</Member>
        <Member type="Method">public bool UpdateUserBanStatus(int userId, bool isBanned)</Member>
        <Member type="Method">public List&lt;ProfileImage&gt; GetAllProfilePictures()</Member>
        <Member type="Method">public string GetProfilePictureUrlById(int id)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>BaseDAL</Name>
        <Access>Public</Access>
        <Location left="3472" top="2401" />
        <Size width="318" height="111" />
        <Collapsed>False</Collapsed>
        <Member type="Field">protected const string CONNECTION_STRING = "Server = mssqlstud.fhict.local; Database = dbi500157_ind2; User Id = dbi500157_ind2; Password = individual2023;"</Member>
        <Member type="Constructor">protected BaseDAL()</Member>
        <Modifier>Abstract</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>GameDAL</Name>
        <Access>Public</Access>
        <Location left="1657" top="2291" />
        <Size width="307" height="247" />
        <Collapsed>False</Collapsed>
        <Member type="Method">public bool Create(Game game)</Member>
        <Member type="Method">public bool Update(Game game)</Member>
        <Member type="Method">public bool Delete(Game game)</Member>
        <Member type="Method">public Game? ReadById(int id)</Member>
        <Member type="Method">public Game[] ReadAll()</Member>
        <Member type="Method">public Game[] ReadOnePageByName(int page, string name)</Member>
        <Member type="Method">public Game[] ReadAllByName(string name)</Member>
        <Member type="Method">public Game[] ReadAllSearch(string name, string company)</Member>
        <Member type="Method">public int GetTotalPages(int count)</Member>
        <Member type="Method">public bool UserPlayedBefore(User user, Game game)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>SubmissionDAL</Name>
        <Access>Public</Access>
        <Location left="2453" top="2265" />
        <Size width="685" height="298" />
        <Collapsed>False</Collapsed>
        <Member type="Method">public bool Create(RankedSubmission submission)</Member>
        <Member type="Method">public bool Create(UnrankedSubmission submission)</Member>
        <Member type="Method">public bool UpdateRanked(RankedSubmission submission)</Member>
        <Member type="Method">public bool Delete(RankedSubmission submission)</Member>
        <Member type="Method">public Submission[] ReadRecent(string username)</Member>
        <Member type="Method">public Submission[] ReadRecent(int userId)</Member>
        <Member type="Method">public UnrankedSubmission[] ReadByGame(int gameId, string username)</Member>
        <Member type="Method">public UnrankedSubmission[] ReadByUser(int userId)</Member>
        <Member type="Method">public RankedSubmission ReadRanked(int id)</Member>
        <Member type="Method">public RankedSubmission[] ReadPendingAdmin(int pendingSearch, string usernameSerach, string gameSearch, string platformSearch)</Member>
        <Member type="Method">public RankedSubmission[] ReadApprovedAdmin(int approvedSearch, string usernameSearch, string gameSearch, string platformSearch)</Member>
        <Member type="Method">public RankedSubmission[] ReadRankedByGame(int gameId, string username)</Member>
        <Member type="Method">public RankedSubmission[] ReadRankedByUser(int userId)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>ProfileImage</Name>
        <Access>Public</Access>
        <Location left="3948" top="1710" />
        <Size width="162" height="111" />
        <Collapsed>True</Collapsed>
        <Member type="Field">int Id</Member>
        <Member type="Field">string Url</Member>
        <Modifier>None</Modifier>
      </Entity>
    </Entities>
    <Relationships>
      <Relationship type="Association" first="1" second="0">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>2010</X>
          <Y>1535</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>1865</X>
          <Y>713</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Association" first="2" second="0">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1141</X>
          <Y>1656</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>1573</X>
          <Y>704</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Association" first="3" second="2">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1274</X>
          <Y>1813</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Association" first="4" second="0">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>3289</X>
          <Y>916</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>2341</X>
          <Y>489</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Association" first="5" second="4">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>3021</X>
          <Y>1360</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>3283</X>
          <Y>988</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Generalization" first="7" second="5">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>3269</X>
          <Y>1383</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>3076</X>
          <Y>1403</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Generalization" first="8" second="5">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>3296</X>
          <Y>1541</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>3176</X>
          <Y>1541</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Dependency" first="6" second="4">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>3590</X>
          <Y>517</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>3590</X>
          <Y>755</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Dependency" first="9" second="6">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1390</X>
          <Y>775</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>2663</X>
          <Y>546</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Dependency" first="9" second="10">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1393</X>
          <Y>736</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>3261</X>
          <Y>478</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Association" first="11" second="9">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1733</X>
          <Y>1591</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Association" first="11" second="12">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1804</X>
          <Y>1958</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>1804</X>
          <Y>1954</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Association" first="5" second="15">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>2783</X>
          <Y>1773</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>2783</X>
          <Y>1857</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Association" first="1" second="13">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>2192</X>
          <Y>1813</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>2192</X>
          <Y>1876</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Association" first="4" second="9">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>3287</X>
          <Y>811</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>1390</X>
          <Y>811</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Association" first="17" second="16">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>2438</X>
          <Y>1285</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>3274</X>
          <Y>337</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Association" first="17" second="1">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Association" first="17" second="2">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1936</X>
          <Y>1344</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>1276</X>
          <Y>1694</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Association" first="3" second="14">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1414</X>
          <Y>1972</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>1414</X>
          <Y>2031</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Realization" first="18" second="14">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1382</X>
          <Y>2279</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>1382</X>
          <Y>2245</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Realization" first="19" second="13">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>2216</X>
          <Y>2240</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>2216</X>
          <Y>2210</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Association" first="19" second="16">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>2363</X>
          <Y>2386</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>2387</X>
          <Y>314</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Generalization" first="18" second="20">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1402</X>
          <Y>2614</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>3521</X>
          <Y>2567</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Generalization" first="19" second="20">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>2158</X>
          <Y>2612</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>3572</X>
          <Y>2633</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Realization" first="21" second="12">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1806</X>
          <Y>2266</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>1806</X>
          <Y>2244</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Generalization" first="21" second="20">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1805</X>
          <Y>2608</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>3630</X>
          <Y>2670</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Realization" first="22" second="15">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>2893</X>
          <Y>2240</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>2893</X>
          <Y>2202</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Generalization" first="22" second="20">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>2857</X>
          <Y>2603</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>3683</X>
          <Y>2588</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Association" first="23" second="0">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>4135</X>
          <Y>1737</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>2585</X>
          <Y>577</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Association" first="23" second="19">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>4075</X>
          <Y>1780</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>2276</X>
          <Y>2745</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
    </Relationships>
  </ProjectItem>
</Project>
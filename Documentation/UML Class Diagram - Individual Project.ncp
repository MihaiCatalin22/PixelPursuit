<Project>
  <Name>UML Class Diagram - Individual Project</Name>
  <ProjectItem type="NClass.DiagramEditor.ClassDiagram.Diagram" assembly="NClass.DiagramEditor, Version=2.4.1823.0, Culture=neutral, PublicKeyToken=null">
    <Name>UML Class Diagram</Name>
    <Language>CSharp</Language>
    <Entities>
      <Entity type="Class">
        <Name>User</Name>
        <Access>Public</Access>
        <Location left="1260" top="295" />
        <Size width="774" height="298" />
        <Collapsed>False</Collapsed>
        <Member type="Constructor">public User()</Member>
        <Member type="Constructor">public User(string username, string password, string email, bool isAdmin)</Member>
        <Member type="Constructor">public User(int id, string username, string password, string email, DateOnly registrationDate, string profilePicture, string bio, bool banned, bool isAdmin)</Member>
        <Member type="Property">public int ID { get; set; }</Member>
        <Member type="Property">public string Username { get; set; }</Member>
        <Member type="Property">public string Password { get; set; }</Member>
        <Member type="Property">public string Email { get; set; }</Member>
        <Member type="Property">public DateOnly RegistrationDate { get; set; }</Member>
        <Member type="Property">public string ProfilePicture { get; set; }</Member>
        <Member type="Property">public string Bio { get; set; }</Member>
        <Member type="Property">public bool Banned { get; set; }</Member>
        <Member type="Property">public bool IsAdmin { get; set; }</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>UserController</Name>
        <Access>Public</Access>
        <Location left="743" top="323" />
        <Size width="288" height="264" />
        <Collapsed>False</Collapsed>
        <Member type="Field">IUserManagement userManager</Member>
        <Member type="Method">public bool Create(User user)</Member>
        <Member type="Method">public User[] ReadAll()</Member>
        <Member type="Method">public User[] ReadAllUsers()</Member>
        <Member type="Method">public User[] ReadAllAdmins()</Member>
        <Member type="Method">public User[] ReadAllUsersSearch(string search)</Member>
        <Member type="Method">public bool Update(User user)</Member>
        <Member type="Method">public bool Delete(User user)</Member>
        <Member type="Method">public User? GetUserFromUsername(string username)</Member>
        <Member type="Method">public User? GetUserFromId(int id)</Member>
        <Member type="Method">public string? GetSalt(User user)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>Ban</Name>
        <Access>Public</Access>
        <Location left="2248" top="322" />
        <Size width="496" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Constructor">public Ban(DateOnly startDate, DateOnly endDate, string reason, User user, User admin)</Member>
        <Member type="Constructor">public Ban(int id, DateOnly startDate, DateOnly endDate, string reason, User user, User admin)</Member>
        <Member type="Property">public int Id { get; set; }</Member>
        <Member type="Property">public DateOnly StartDate { get; set; }</Member>
        <Member type="Property">public DateOnly EndDate { get; set; }</Member>
        <Member type="Property">public string Reason { get; set; }</Member>
        <Member type="Property">public User User { get; set; }</Member>
        <Member type="Property">public User Admin { get; set; }</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>BanController</Name>
        <Access>Public</Access>
        <Location left="2857" top="310" />
        <Size width="252" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Field">IBanManagement banManager</Member>
        <Member type="Method">public bool Create(Ban ban)</Member>
        <Member type="Method">public Ban[] ReadAll()</Member>
        <Member type="Method">public Ban[] ReadAllSearch(string search)</Member>
        <Member type="Method">public bool UnbanUser(User user)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>Submission</Name>
        <Access>Public</Access>
        <Location left="1395" top="738" />
        <Size width="535" height="230" />
        <Collapsed>False</Collapsed>
        <Member type="Constructor">public Submission()</Member>
        <Member type="Constructor">public Submission(User user, Game game, DateOnly date, TimeSpan time, EnumPlatform platform)</Member>
        <Member type="Constructor">public Submission(int id, User user, Game game, DateOnly date, TimeSpan time, EnumPlatform platform)</Member>
        <Member type="Property">public int Id { get; set; }</Member>
        <Member type="Property">public User User { get; set; }</Member>
        <Member type="Property">public Game Game { get; set; }</Member>
        <Member type="Property">public DateOnly Date { get; set; }</Member>
        <Member type="Property">public TimeSpan TotalTime { get; set; }</Member>
        <Member type="Property">public EnumPlatform Platform { get; set; }</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>SubmissionController</Name>
        <Access>Public</Access>
        <Location left="1340" top="1116" />
        <Size width="685" height="315" />
        <Collapsed>False</Collapsed>
        <Member type="Method">public bool Create(RankedSubmission submission)</Member>
        <Member type="Method">public bool Create(UnrankedSubmission submission)</Member>
        <Member type="Method">public Submission[] ReadRecent(string username)</Member>
        <Member type="Method">public UnrankedSubmission[] ReadByGame(int gameId, string username)</Member>
        <Member type="Method">public UnrankedSubmission[] ReadByUser(id userId)</Member>
        <Member type="Method">public RankedSubmission ReadRanked(int id)</Member>
        <Member type="Method">public RankedSubmission[] ReadPendingAdmin(int pendingSearch, string usernameSearch, string gameSearch, string platformSearch)</Member>
        <Member type="Method">public RankedSubmission[] ReadApprovedAdmin(int approvedSearch, string usernameSearch, string gameSearch, string platformSearch)</Member>
        <Member type="Method">public RankedSubmission[] ReadRankedByGame(int gameId, string username)</Member>
        <Member type="Method">public RankedSubmission[] ReadRankedByUser(int userId)</Member>
        <Member type="Method">public bool UpdateRanked(RankedSubmission submission)</Member>
        <Member type="Method">public bool Delete(RankedSubmission submission)</Member>
        <Member type="Method">public int CalculateRank(RankedSubmission submission)</Member>
        <Member type="Method">public int PredictRank(RankedSubmission submission)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Enum">
        <Name>EnumPlatform</Name>
        <Access>Public</Access>
        <Location left="1395" top="1024" />
        <Size width="162" height="520" />
        <Collapsed>True</Collapsed>
        <Value>PC</Value>
        <Value>Playstation</Value>
        <Value>Playstation2</Value>
        <Value>Playstation3</Value>
        <Value>Playstation4</Value>
        <Value>Playstation5</Value>
        <Value>PlaystationVita</Value>
        <Value>PlaystationPortable</Value>
        <Value>Xbox</Value>
        <Value>Xbox360</Value>
        <Value>XboxOne</Value>
        <Value>XboxOneS</Value>
        <Value>XboxOneX</Value>
        <Value>XboxSeriesS</Value>
        <Value>XboxSeriesX</Value>
        <Value>NintendoDS</Value>
        <Value>Nintendo2DS</Value>
        <Value>Nintendo3DS</Value>
        <Value>NintendoWii</Value>
        <Value>NintendoWiiU</Value>
        <Value>NintendoSwitch</Value>
        <Value>Android</Value>
        <Value>iOS</Value>
        <Value>SteamDeck</Value>
        <Value>NES</Value>
        <Value>N64</Value>
        <Value>Mac</Value>
      </Entity>
      <Entity type="Class">
        <Name>RankedSubmission</Name>
        <Access>Public</Access>
        <Location left="509" top="1181" />
        <Size width="761" height="196" />
        <Collapsed>False</Collapsed>
        <Member type="Constructor">public RankedSubmission()</Member>
        <Member type="Constructor">public RankedSubmission(User user, Game game, DateOnly date, TimeSpan time, EnumPlatform platform, string link, int rank)</Member>
        <Member type="Constructor">public RankedSubmission(int id, User user, DateOnly date, TimeSpan time, EnumPlatform platform, bool approved, bool pending, string link, int rank)</Member>
        <Member type="Property">public bool Approved { get; set; }</Member>
        <Member type="Property">public bool Pending { get; set; }</Member>
        <Member type="Property">public string Link { get; set; }</Member>
        <Member type="Property">public int Rank { get; set; }</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>UnrankedSubmission</Name>
        <Access>Public</Access>
        <Location left="2116" top="1162" />
        <Size width="802" height="179" />
        <Collapsed>False</Collapsed>
        <Member type="Constructor">public UnrankedSubmission()</Member>
        <Member type="Constructor">public UnrankedSubmission(int id, User user, Game game, DateOnly date, TimeSpan time, EnumPlatform platform, bool TAS, bool glitchless, bool anypercent)</Member>
        <Member type="Constructor">public UnrankedSubmission(User user, Game game, DateOnly date, TimeSpan time, EnumPlatform platform, bool TAS, bool glitchless, bool anypercent)</Member>
        <Member type="Property">public bool TAS { get; set; }</Member>
        <Member type="Property">public bool Glitchless { get; set; }</Member>
        <Member type="Property">public bool AnyPercent { get; set; }</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>Game</Name>
        <Access>Public</Access>
        <Location left="509" top="818" />
        <Size width="780" height="332" />
        <Collapsed>False</Collapsed>
        <Member type="Constructor">public Game(int id, string name, string company, DateOnly releaseDate, string trailerLink, int noOfRuns, int noOfPlayers, TimeSpan bestTime, TimeSpan totalTime, string genres, string platforms, string pictureLink, string backgroundPictureLink)</Member>
        <Member type="Constructor">public Game(string name, string company, DateOnly releaseDate, string trailerLink, string genres, string platforms, string pictureLink, string backgroundPictureLink)</Member>
        <Member type="Property">public int ID { get; set; }</Member>
        <Member type="Property">public string Name { get; set; }</Member>
        <Member type="Property">public string Company { get; set; }</Member>
        <Member type="Property">public DateOnly ReleaseDate { get; set; }</Member>
        <Member type="Property">public string Genres { get; set; }</Member>
        <Member type="Property">public string Platforms { get; set; }</Member>
        <Member type="Property">public string TrailerLink { get; set; }</Member>
        <Member type="Property">public int NumberOfRuns { get; set; }</Member>
        <Member type="Property">public int NumberOfPlayers { get; set; }</Member>
        <Member type="Property">public TimeSpan BestTime { get; set; }</Member>
        <Member type="Property">public TimeSpan TotalTime { get; set; }</Member>
        <Member type="Property">public string PictureLink { get; set; }</Member>
        <Member type="Property">public string BackgroundPictureLink { get; set; }</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Enum">
        <Name>EnumGenre</Name>
        <Access>Public</Access>
        <Location left="1071" top="681" />
        <Size width="162" height="541" />
        <Collapsed>True</Collapsed>
        <Value>Roguelike</Value>
        <Value>Horror</Value>
        <Value>Survival</Value>
        <Value>ARPG</Value>
        <Value>MOBA</Value>
        <Value>Puzzle</Value>
        <Value>OpenWorld</Value>
        <Value>PointAndClick</Value>
        <Value>Sandbox</Value>
        <Value>Simulator</Value>
        <Value>Racing</Value>
        <Value>Sports</Value>
        <Value>Adventure</Value>
        <Value>Action</Value>
        <Value>JRPG</Value>
        <Value>MMORPG</Value>
        <Value>MMO</Value>
        <Value>RPG</Value>
        <Value>FPS</Value>
        <Value>Platformer</Value>
        <Value>Shooter</Value>
        <Value>Strategy</Value>
        <Value>Casual</Value>
        <Value>Arcade</Value>
        <Value>Indie</Value>
        <Value>BattleRoyale</Value>
        <Value>RolePlaying</Value>
        <Value>TowerDefense</Value>
      </Entity>
      <Entity type="Class">
        <Name>GameController</Name>
        <Access>Public</Access>
        <Location left="105" top="937" />
        <Size width="304" height="264" />
        <Collapsed>False</Collapsed>
        <Member type="Field">iGameManagement gameManager</Member>
        <Member type="Method">public bool Create(Game game)</Member>
        <Member type="Method">public Game? ReadById(int id)</Member>
        <Member type="Method">public Game[] ReadAll()</Member>
        <Member type="Method">public Game[] ReadOnePageByName(int page, string name)</Member>
        <Member type="Method">public Game[] ReadAllByName(string name)</Member>
        <Member type="Method">public Game[] ReadAllSearch(string name, string company)</Member>
        <Member type="Method">public bool Update(Game game)</Member>
        <Member type="Method">public bool Delete(Game game)</Member>
        <Member type="Method">public int GetTotalPages(int pagesize)</Member>
        <Member type="Method">public bool UserPlayedBefore(User user, Game game)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Interface">
        <Name>IGameManagement</Name>
        <Access>Public</Access>
        <Location left="29" top="658" />
        <Size width="314" height="231" />
        <Collapsed>False</Collapsed>
        <Member type="Method">bool Create(Game game)</Member>
        <Member type="Method">Game? ReadById(int id)</Member>
        <Member type="Method">Game[] ReadAll()</Member>
        <Member type="Method">Game[] ReadOnePageByName(int page, string name)</Member>
        <Member type="Method">Game[] ReadAllByName(string name)</Member>
        <Member type="Method">Game[] ReadAllBySearch(string name, string company)</Member>
        <Member type="Method">bool Update(Game game)</Member>
        <Member type="Method">bool Delete(Game game)</Member>
        <Member type="Method">int GetTotalPages(int pagesize)</Member>
        <Member type="Method">bool UserPlayedBefore(User user, Game game)</Member>
      </Entity>
      <Entity type="Interface">
        <Name>IUserManagement</Name>
        <Access>Public</Access>
        <Location left="403" top="347" />
        <Size width="275" height="231" />
        <Collapsed>False</Collapsed>
        <Member type="Method">bool Create(user User)</Member>
        <Member type="Method">User[] ReadAll()</Member>
        <Member type="Method">User[] ReadAllUsers()</Member>
        <Member type="Method">User[] ReadAllAdmins()</Member>
        <Member type="Method">User[] ReadAllUsersSearch(string search)</Member>
        <Member type="Method">bool Update(User user)</Member>
        <Member type="Method">bool Delete(User user)</Member>
        <Member type="Method">User? GetUserFromUsername(string username)</Member>
        <Member type="Method">User? GetUserFromId(int id)</Member>
        <Member type="Method">string? GetSalt(User user)</Member>
      </Entity>
      <Entity type="Interface">
        <Name>IBanManagement</Name>
        <Access>Public</Access>
        <Location left="3159" top="347" />
        <Size width="215" height="113" />
        <Collapsed>False</Collapsed>
        <Member type="Method">bool Create(Ban ban)</Member>
        <Member type="Method">Ban[] ReadAll()</Member>
        <Member type="Method">Ban[] ReadAllSearch(string search)</Member>
      </Entity>
      <Entity type="Interface">
        <Name>ISubmissionManagement</Name>
        <Access>Public</Access>
        <Location left="1340" top="1522" />
        <Size width="690" height="282" />
        <Collapsed>False</Collapsed>
        <Member type="Method">bool Create(RankedSubmission submission)</Member>
        <Member type="Method">bool Create(UnrankedSubmission submission)</Member>
        <Member type="Method">Submission[] ReadRecent(string username)</Member>
        <Member type="Method">Submission[] ReadRecent(int userId)</Member>
        <Member type="Method">UnrankedSubmission[] ReadByGame(int gameId, string username)</Member>
        <Member type="Method">UnrankedSubmission[] ReadByUser(int userId)</Member>
        <Member type="Method">RankedSubmission[] ReadRanked(int id)</Member>
        <Member type="Method">RankedSubmission[] ReadRankedByUser(int userId)</Member>
        <Member type="Method">RankedSubmission[] ReadPendingAdmin(int pendingSearch, string usernameSearch, string gameSearch, string platformSearch)</Member>
        <Member type="Method">RankedSubmission[] ReadApprovedAdmin(int approvedSearch, string usernameSearch, string gameSearch, string platformSearch)</Member>
        <Member type="Method">RankedSubmission[] ReadRankedByGame(int gameId, string username)</Member>
        <Member type="Method">bool UpdateRanked(RankedSubmission submission)</Member>
        <Member type="Method">bool Delete(RankedSubmission submission)</Member>
      </Entity>
      <Entity type="Class">
        <Name>HashPassword</Name>
        <Access>Public</Access>
        <Location left="553" top="34" />
        <Size width="343" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Method">public string GenerateHashedPassword(string password, string salt)</Member>
        <Member type="Method">public string GenerateSalt()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>LoginController</Name>
        <Access>Public</Access>
        <Location left="1625" top="26" />
        <Size width="360" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Field">UserController userController = new (new UserDAL())</Member>
        <Member type="Field">BanController banController = new(new BanDAL())</Member>
        <Member type="Method">public User? LoginUsername(string username, string password)</Member>
        <Member type="Method">public User? LoginEmail(string email, string password)</Member>
        <Member type="Method">public User? LoginUsernameAdmin(string username, string password)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>BanDAL</Name>
        <Access>Public</Access>
        <Location left="3522" top="347" />
        <Size width="213" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Method">public bool Create(Ban ban)</Member>
        <Member type="Method">public Ban[] ReadAll()</Member>
        <Member type="Method">public Ban[] ReadAllSearch(string search)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>UserDAL</Name>
        <Access>Public</Access>
        <Location left="77" top="326" />
        <Size width="266" height="264" />
        <Collapsed>False</Collapsed>
        <Member type="Method">public bool Create(User user)</Member>
        <Member type="Method">public User[] ReadAll()</Member>
        <Member type="Method">public User[] ReadAllUsers()</Member>
        <Member type="Method">public User[] ReadAllAdmins()</Member>
        <Member type="Method">public User[] ReadAllUsersSearch()</Member>
        <Member type="Method">public bool Update(user User)</Member>
        <Member type="Method">public bool Delete(user User)</Member>
        <Member type="Method">public string? GetSalt(user User)</Member>
        <Member type="Method">public User? GetUserFromUsername(string username)</Member>
        <Member type="Method">public User? GetUserFromId(int id)</Member>
        <Modifier>None</Modifier>
      </Entity>
    </Entities>
    <Relationships>
      <Relationship type="Association" first="1" second="0">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Association" first="2" second="0">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Association" first="3" second="2">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Association" first="4" second="0">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Association" first="5" second="4">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1671</X>
          <Y>1089</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>1671</X>
          <Y>993</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Generalization" first="7" second="5">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1295</X>
          <Y>1268</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Generalization" first="8" second="5">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>2053</X>
          <Y>1295</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>2050</X>
          <Y>1295</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Dependency" first="6" second="4">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>1478</X>
          <Y>994</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>1478</X>
          <Y>994</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Dependency" first="9" second="6">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Dependency" first="9" second="10">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>1150</X>
          <Y>756</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Association" first="11" second="9">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Association" first="11" second="12">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>375</X>
          <Y>912</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>368</X>
          <Y>766</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Association" first="5" second="15">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Association" first="1" second="13">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>709</X>
          <Y>465</Y>
        </BendPoint>
        <BendPoint relativeToStartShape="False">
          <X>703</X>
          <Y>465</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Association" first="4" second="9">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Association" first="17" second="16">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Association" first="17" second="1">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Association" first="17" second="2">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Association" first="3" second="14">
        <Label>
        </Label>
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Realization" first="18" second="14">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="True">
          <X>3481</X>
          <Y>417</Y>
        </BendPoint>
      </Relationship>
      <Relationship type="Realization" first="19" second="13">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Association" first="19" second="16">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <BendPoint relativeToStartShape="False">
          <X>501</X>
          <Y>148</Y>
        </BendPoint>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
    </Relationships>
  </ProjectItem>
</Project>